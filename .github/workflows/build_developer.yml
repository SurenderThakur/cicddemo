---
name: Build and Deploy to Dev
on:
  push:
    branches:
      - developer
  workflow_dispatch: null
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CLIENT_ID: ${{ secrets.CLIENT_ID }}
      CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
      AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
      LOGZIO_TOKEN: ${{ secrets.LOGZIO_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: zulu
      - name: Print effective-settings (optional)
        run: mvn help:effective-settings
      - name: Build with Maven
        run: mvn -B package -s .maven/settings.xml
      - name: Stamp artifact file name with commit hash
        run: >
          artifactName1=$(ls target/*.jar | head -1)

          commitHash=$(git rev-parse --short "$GITHUB_SHA")

          artifactName2=$(ls target/*.jar | head -1 | sed "s/.jar/-$commitHash.jar/g")

          mv $artifactName1 $artifactName2
      - name: Upload artifact
        uses: actions/upload-artifact@master
        with:
          name: artifacts
          path: target/*.jar
  send_email:
    needs: build
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Get version from pom.xml
        run: echo "MAVEN_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
      - name: Get artifact Id from pom.xml
        run: echo "MAVEN_ARTIFACTID=$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)" >> $GITHUB_ENV
      - name: Save details to environment
        run: >
          echo "BRANCH_NAME=${{ github.ref_name }}" >> $GITHUB_ENV
          echo "COMMIT_MESSAGE=${{ github.event.head_commit.message }}" >> $GITHUB_ENV
          echo "COMMIT_AUTHOR=${{ github.event.head_commit.author.name }}" >> $GITHUB_ENV       
      - name: Echo Environment Variables
        run: |
          echo "service: ${{ env.MAVEN_ARTIFACTID }}"
          echo "env: ${{ github.environment }}"          
          echo "tag: ${{ env.MAVEN_VERSION }}"
          echo "task: ${{ env.COMMIT_MESSAGE }}-${{ env.COMMIT_AUTHOR }}"
          echo "PR Number: ${{ github.event.number }}"
          echo "PR Title: ${{ github.event.pull_request.title }}"
          echo "PR Body: ${{ github.event.pull_request.body }}"
          echo "Branch: ${{ github.ref }}"
          echo "Commit SHA: ${{ github.sha }}"
          echo "Repository: ${{ github.repository }}"
          echo "Pusher: ${{ github.event.pusher.name }}"
          echo "Commit Message: ${{ github.event.head_commit.message }}"
      - name: Send Email Notification
        run: >
          curl --location 'https://api.courier.com/send' \

          --header 'Authorization: Bearer ${{ secrets.COURIER_TOKEN }}' \

          --header 'Content-Type: application/json' \

          --data-raw '{
              "message": {
                  "to": {
                      "email": "${{ secrets.EMAIL_TO }}"
                  },
                  "template": "${{ secrets.COURIER_TEMPLATE_ID }}",
                  "data": {
                      "service": "${{ env.MAVEN_ARTIFACTID }}",
                      "env": "${{ env.BRANCH_NAME }}",
                      "release": "Release_${{ env.MAVEN_VERSION }}",
                      "tag": "${{ env.MAVEN_VERSION }}",
                      "task": "${{ env.COMMIT_MESSAGE }}-${{ env.COMMIT_AUTHOR }}",
                      "db": "N/A"
                  }
              }
          }'      
